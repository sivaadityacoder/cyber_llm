[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cyber_llm"
version = "0.1.0"
description = "A comprehensive educational framework for LLM security vulnerabilities, attacks, and defenses"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Cybersecurity LLM Framework Team", email = "security@cyber-llm.org"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Information Technology",
    "Topic :: Security",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "python-multipart>=0.0.6",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "cryptography>=41.0.0",
    "bcrypt>=4.0.0",
    "passlib>=1.7.4",
    "structlog>=23.0.0",
    "prometheus-client>=0.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "isort>=5.12.0",
]
ai = [
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "openai>=1.0.0",
    "anthropic>=0.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.scripts]
cyber-llm = "cyber_llm.cli:main"
cyber-llm-server = "cyber_llm.server:main"
cyber-llm-test = "cyber_llm.testing:main"

[project.urls]
Homepage = "https://github.com/sivaadityacoder/cyber_llm"
Documentation = "https://github.com/sivaadityacoder/cyber_llm/docs"
Repository = "https://github.com/sivaadityacoder/cyber_llm"
Issues = "https://github.com/sivaadityacoder/cyber_llm/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
cyber_llm = ["*.yaml", "*.yml", "*.json", "*.txt"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cyber_llm"]
known_third_party = ["fastapi", "pydantic", "pytest", "requests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests related to security functionality",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]